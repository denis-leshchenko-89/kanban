{"version":3,"sources":["store/slices/boardSlice.js","store/slices/userSlice.js","store/store.js","firebase.js","components/Header/Header.jsx","components/Header/index.js","layouts/DefaultLayout/DefaultLayout.jsx","layouts/DefaultLayout/index.js","components/Board/AddColumn/AddColumn.jsx","components/Board/AddColumn/index.js","components/Board/Card/Card.jsx","components/Board/Card/index.js","components/Board/AddCard/AddCard.jsx","components/Board/Column/Column.jsx","components/Board/Board.jsx","page/HomePage/HomePage.jsx","page/HomePage/index.js","hooks/useAuth.js","HOC/RequireAuth/RequireAuth.jsx","HOC/RequireAuth/index.js","page/LoginPage/LoginPage.jsx","page/LoginPage/index.js","layouts/AuthLayout/index.js","layouts/AuthLayout/AuthLayout.jsx","page/RegistrationnPage/RegistrationnPage.jsx","page/RegistrationnPage/index.js","App.jsx","index.jsx"],"names":["initialState","columns","id","uuid","title","cards","text","boardSlice","createSlice","name","reducers","editTitleColumn","state","action","payload","columnIndex","addColumn","push","addCard","console","log","card","editTextCard","cardIndex","deleteCard","splice","deleteColumn","setColumns","sourceCards","destinationCards","columnSourceIndex","columnDestinationIndex","actions","userSlice","email","token","setUser","removeUser","rootReducer","combineReducers","boardReducer","userReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","reducer","middleware","thunk","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","Header","dispatch","useDispatch","className","type","onClick","DefaultLayout","AddColumn","useState","isEdit","setIsEdit","columnTitle","setColumnTitle","handleToggle","classNames","placeholder","hide","form","show","value","onChange","event","target","column","setTimeout","document","querySelector","scrollBy","Card","titleColumn","setTitleColumn","useEffect","handleEditTitleCard","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","handleDeleteCard","handleChangeEditText","AddCard","cardText","setCardText","Column","setValue","onBlur","handleChangeEditTitle","handleDeleteColumn","droppableId","droppableProps","length","map","Board","useSelector","onDragEnd","result","source","destination","findIndex","element","removed","HomePage","UseAuth","isAuthenticated","RequireAuth","children","useAuth","to","LoginPage","history","useNavigate","error","setError","onSubmit","preventDefault","auth","getAuth","elements","password","signInWithEmailAndPassword","then","user","uid","accessToken","catch","code","slice","AuthLayout","RegistrationnPage","createUserWithEmailAndPassword","persistor","persistStore","store","App","basename","loading","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a60c71ea.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = {\n  columns: [\n    {\n      id: uuid(), title: 'План на месяц', cards: [\n        { id: uuid(), text: 'Пройти курс по React' },\n        { id: uuid(), text: 'Отметить день рождения' },\n      ],\n    },\n    {\n      id: uuid(), title: 'План на день', cards: [\n        { id: uuid(), text: 'Записаться на курс по React' },\n        { id: uuid(), text: 'Забронировать тир на субботу' },\n      ],\n    },\n  ],\n};\n\nexport const boardSlice = createSlice({\n  name: 'board',\n  initialState,\n  reducers: {\n    editTitleColumn: (state, action) => {\n      state.columns[action.payload.columnIndex].title = action.payload.title;\n    },\n    addColumn: (state, action) => {\n      state.columns.push(action.payload);\n    },\n    addCard: (state, action) => {\n      console.log(action.payload);\n      state.columns[action.payload.columnIndex].cards.push(action.payload.card);\n    },\n    editTextCard: (state, action) => {\n      state.columns[action.payload.columnIndex].cards[action.payload.cardIndex].text = action.payload.text;\n    },\n    deleteCard: (state, action) => {\n      state.columns[action.payload.columnIndex].cards.splice(action.payload.cardIndex, 1);\n    },\n    deleteColumn: (state, action) => {\n      state.columns.splice(action.payload, 1);\n    },\n    setColumns: (state, action) => {\n      if (action.payload.sourceCards && action.payload.destinationCards) {\n        state.columns[action.payload.columnSourceIndex].cards = action.payload.sourceCards;\n        state.columns[action.payload.columnDestinationIndex].cards = action.payload.destinationCards;\n      } else {\n        state.columns[action.payload.columnSourceIndex].cards = action.payload.sourceCards;\n      }\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addColumn, addCard, editTitleColumn, editTextCard, deleteCard, deleteColumn, setColumns,\n} = boardSlice.actions;\n\nexport default boardSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  email: null,\n  token: null,\n  id: null,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      state.email = action.payload.email;\n      state.token = action.payload.token;\n      state.id = action.payload.id;\n    },\n    removeUser(state) {\n      state.email = null;\n      state.token = null;\n      state.id = null;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setUser, removeUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n\nimport boardReducer from './slices/boardSlice';\nimport userReducer from './slices/userSlice';\n\n\nconst rootReducer = combineReducers({\n  boardReducer: boardReducer,\n  userReducer: userReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk],\n});\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);","import './Header.scoped.scss';\nimport { removeUser } from '../../store/slices/userSlice';\nimport { useDispatch } from 'react-redux';\n\n\nfunction Header() {\n  const dispatch = useDispatch();\n\n  const logOut = () => {\n    dispatch(removeUser());\n  };\n  return (\n    <header className='header'>\n      <h1>Лого</h1>\n      <button type='button' onClick={logOut}>Выйти</button>\n    </header>\n  );\n}\n\nexport default Header;\n\n","import Header from './Header';\n\nexport default Header;\n","import { Outlet } from 'react-router-dom';\nimport './DefaultLayout.scss';\nimport Header from '../../components/Header';\n\nfunction DefaultLayout() {\n  return (\n    <div className='board-layout'>\n      <Header />\n      <main className='main'><Outlet /></main>\n    </div>\n  );\n}\n\nexport default DefaultLayout;\n","import DefaultLayout from './DefaultLayout';\n\nexport default DefaultLayout;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './AddColumn.scoped.scss';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../../store/slices/boardSlice';\nimport { v4 as uuid } from 'uuid';\n\n\nfunction AddColumn() {\n  const [isEdit, setIsEdit] = useState(false);\n  const [columnTitle, setColumnTitle] = useState('');\n  const dispatch = useDispatch();\n\n\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n    setColumnTitle('');\n  };\n\n  const handleChangeTitle = (event) => {\n    setColumnTitle(event.target.value);\n  };\n\n  const handleAddColumn = () => {\n    if (columnTitle !== '') {\n      const column = { id: uuid(), title: columnTitle, cards: [] };\n      dispatch(addColumn(column));\n      setIsEdit(!isEdit);\n      setTimeout(()=>{\n        let board = document.querySelector('.board');\n        board.scrollBy(300, 0);\n\n      },0)\n    }\n  };\n\n  return (\n    <div className='add-column'>\n      <div className='add-button'>\n        <div\n          className={classNames({\n            placeholder: true,\n            hide: isEdit,\n          })}\n          onClick={handleToggle}\n        >\n          <i className='far fa-plus' />Добавьте колонку\n        </div>\n        <div\n          className={classNames({\n            form: true,\n            show: isEdit,\n          })}\n        >\n          <div className='input'>\n            <input type='text' value={columnTitle} onChange={handleChangeTitle} />\n          </div>\n          <div className='nav'>\n            <button type='button' onClick={handleAddColumn}>\n              Добавить колонку\n            </button>\n            <i className='fal fa-times' onClick={handleToggle} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddColumn;\n","import AddColumn from './AddColumn';\n\nexport default AddColumn;\n","import React, { useEffect, useState } from 'react';\nimport './Card.scoped.scss';\nimport { deleteCard, editTextCard } from '../../../store/slices/boardSlice';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nfunction Card({ card, columnIndex, cardIndex, ...provided }) {\n  const [titleColumn, setTitleColumn] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    setTitleColumn(card.text);\n  }, [card.text]);\n\n  const handleChangeEditText = (event, columnIndex, cardIndex) => {\n    if (titleColumn !== '') {\n      setIsEdit(!isEdit);\n      dispatch(editTextCard({ text: titleColumn, columnIndex: columnIndex, cardIndex: cardIndex }));\n    }\n\n  };\n  const handleDeleteCard = (columnIndex, cardIndex) => {\n    dispatch(deleteCard({ columnIndex: columnIndex, cardIndex: cardIndex }));\n  };\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n  };\n\n  const handleEditTitleCard = (event) => {\n    const value = event.target.value;\n    setTitleColumn(value);\n  };\n\n  return (\n    <Draggable\n      key={card.id}\n      draggableId={card.id}\n      index={cardIndex}\n    >\n      {(provided, snapshot) => {\n        return (\n          <div\n            id={card.id}\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{\n              ...snapshot.isDragging,\n              ...provided.draggableProps.style,\n            }}\n          >\n            <div className={classNames({\n              title: true, hide: isEdit,\n            })}>\n              <div className='text'>{card.text}</div>\n              <div className='nav'>\n                <i className='far fa-pen' onClick={handleToggle} />\n                <i className='far fa-trash-alt' onClick={() => {\n                  handleDeleteCard(columnIndex, cardIndex);\n                }} />\n              </div>\n            </div>\n\n            <div\n              className={classNames({\n                form: true, show: isEdit,\n              })}\n            >\n              <div className='textarea'>\n                <textarea type='text' value={titleColumn} placeholder='Ввести заголовок для этой карточки'\n                          onChange={handleEditTitleCard} /></div>\n              <div className='nav'>\n                <button type='button' onClick={(event) => {\n                  handleChangeEditText(event, columnIndex, cardIndex);\n                }}>\n                  Сохранить\n                </button>\n                <i className='fal fa-times' onClick={handleToggle} />\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n}\n\nexport default Card;\n","import Card from './Card';\n\nexport default Card;\n","import React, { useState } from 'react';\nimport './AddCard.scoped.scss';\nimport classNames from 'classnames';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../../store/slices/boardSlice';\n\nfunction AddCard({ columnIndex }) {\n  const dispatch = useDispatch();\n  const [cardText, setCardText] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n    setCardText('');\n  };\n\n  const handleEditTitleCard = (event) => {\n    const value = event.target.value;\n    setCardText(value);\n  };\n\n  const handleAddCard = () => {\n    if (cardText !== '') {\n      const card = { id: uuid(), text: cardText };\n      dispatch(addCard({ card, columnIndex: columnIndex }));\n      setIsEdit(!isEdit);\n    }\n  };\n  return (\n    <div className='add-card'>\n      <div className='add-button'>\n        <div\n          className={classNames({\n            placeholder: true,\n            hide: isEdit,\n          })}\n          onClick={handleToggle}\n        >\n          <i className='far fa-plus' />Добавьте еще одну колонку\n        </div>\n        <div\n          className={classNames({\n            form: true,\n            show: isEdit,\n          })}\n        >\n          <div className='textarea'>\n            <textarea type='text' value={cardText} placeholder='Ввести заголовок для этой карточки'\n                      onChange={handleEditTitleCard} />\n          </div>\n          <div className='nav'>\n            <button type='button' onClick={handleAddCard}>\n              Добавить карточку\n            </button>\n            <i className='fal fa-times' onClick={handleToggle} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddCard;\n","import React, { useEffect, useState } from 'react';\nimport './Column.scoped.scss';\nimport Card from '../Card';\nimport AddCard from '../AddCard/AddCard';\nimport { deleteColumn, editTitleColumn } from '../../../store/slices/boardSlice';\nimport { useDispatch } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\n\nfunction Column({ column, columnIndex }) {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setValue(column.title);\n  }, [column.title]);\n\n  const handleChangeEditTitle = (event, columnIndex) => {\n    dispatch(editTitleColumn({ title: value, columnIndex: columnIndex }));\n  };\n\n  const handleDeleteColumn = (columnIndex) => {\n    dispatch(deleteColumn(columnIndex));\n  };\n\n  return (\n    <div id={column.id} className='column'>\n      <div className='column-header'>\n        <div className='input'>\n          <input\n            type='text'\n            value={value}\n            onChange={(event) => {\n              setValue(event.target.value);\n            }}\n            onBlur={(event) => {\n              handleChangeEditTitle(event, columnIndex);\n            }}\n          />\n        </div>\n        <div className='nav'>\n          <i className='far fa-trash-alt' onClick={() => {\n            handleDeleteColumn(columnIndex);\n          }} />\n        </div>\n      </div>\n      <Droppable droppableId={column.id}>\n        {(provided, snapshot) => {\n          return (\n            <div className='column-list'\n                 ref={provided.innerRef}\n                 {...provided.droppableProps}\n            >\n              {column.cards.length > 0 &&\n                column.cards.map((card, cardIndex) => {\n                  return <Card key={card.id} card={card} columnIndex={columnIndex} cardIndex={cardIndex}\n                  />;\n                })\n              }\n              {provided.placeholder}\n            </div>\n          );\n        }}\n      </Droppable>\n      <div className='column-footer'>\n        <AddCard columnIndex={columnIndex} />\n      </div>\n    </div>\n  );\n}\n\nexport default Column;\n","import React from 'react';\nimport './Board.scoped.scss';\nimport AddColumn from '../../components/Board/AddColumn';\nimport Column from '../../components/Board/Column/Column';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { setColumns } from '../../store/slices/boardSlice';\n\n\nfunction Board() {\n\n  const dispatch = useDispatch();\n\n  const columns = useSelector((state) => {\n    return state.boardReducer.columns;\n  });\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!result.destination) {\n      return;\n    }\n    if (source.droppableId !== destination.droppableId) {\n      const columnSourceIndex = columns.findIndex((element) => {\n        return element.id === source.droppableId;\n      });\n      const columnDestinationIndex = columns.findIndex((element) => {\n        return element.id === destination.droppableId;\n      });\n      const sourceCards = [...columns[columnSourceIndex].cards];\n      const destinationCards = [...columns[columnDestinationIndex].cards];\n      const [removed] = sourceCards.splice(source.index, 1);\n      destinationCards.splice(destination.index, 0, removed);\n      dispatch(setColumns({ columnSourceIndex, columnDestinationIndex, sourceCards, destinationCards }));\n\n    } else {\n      const columnSourceIndex = columns.findIndex((element) => {\n        return element.id === source.droppableId;\n      });\n      const sourceCards = [...columns[columnSourceIndex].cards];\n      const [removed] = sourceCards.splice(source.index, 1);\n      sourceCards.splice(destination.index, 0, removed);\n      dispatch(setColumns({ columnSourceIndex, sourceCards }));\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className='board'>\n        {columns && columns.map((column, columnIndex) => {\n          return (\n            <Column key={column.id} column={column} columnIndex={columnIndex} />\n          );\n        })}\n        <AddColumn />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './HomePage.scoped.scss';\nimport Board from '../../components/Board/Board';\n\nfunction HomePage() {\n  return (\n    <div className='home-page'>\n      <Board />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import { useSelector } from 'react-redux';\n\n\nfunction UseAuth() {\n  const { email, token, id } = useSelector((state) => {\n    return state.userReducer;\n  });\n  return {\n    isAuthenticated: !!email,\n    email,\n    token,\n    id,\n  };\n}\n\nexport default UseAuth;","import { Navigate } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nfunction RequireAuth({ children, element: Element, ...props }) {\n  const { isAuthenticated } = useAuth();\n  if (!isAuthenticated) {\n    return <Navigate to='/login' />;\n  }\n  return children;\n}\n\nexport default RequireAuth;\n","import RequireAuth from './RequireAuth';\n\nexport default RequireAuth;\n","import React, { useState } from 'react';\nimport './LoginPage.scoped.scss';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { setUser } from '../../store/slices/userSlice';\nimport { useDispatch } from 'react-redux';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const { isAuthenticated } = useAuth();\n  const [error, setError] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const auth = getAuth();\n    const { email, password } = event.target.elements;\n\n    signInWithEmailAndPassword(auth, email.value, password.value)\n      .then(({ user }) => {\n        dispatch(setUser({\n          email: user.email,\n          id: user.uid,\n          token: user.accessToken,\n        }));\n        history('/');\n      })\n      .catch((error) => {\n        setError(error.code.slice(5));\n      });\n  };\n\n  return (\n    isAuthenticated ? <Navigate to='/' /> :\n      <div className='login-page'>\n        <div className='form'>\n          <div className='nav'>\n            <Link to='/login' className='active'>Логин</Link>\n            <Link to='/registration'>Регистрация</Link>\n          </div>\n          <form onSubmit={handleSubmit}>\n            <input type='email' name='email' placeholder='Имя' />\n            <input type='password' name='password' placeholder='Пароль' />\n            <button type='submit'>Вход</button>\n          </form>\n          <div className='error-message'>{error}</div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginPage;\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import AuthLayout from './AuthLayout';\n\nexport default AuthLayout;\n","import { Outlet } from 'react-router-dom';\nimport './AuthLayout.scss';\n\nconst AuthLayout = () => {\n  return (\n    <div className='auth-layout'>\n      <main className='main'><Outlet /></main>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","import React, { useState } from 'react';\nimport './RegistrationnPage.scoped.scss';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../store/slices/userSlice';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nfunction RegistrationnPage() {\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const { isAuthenticated } = useAuth();\n  const [error, setError] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const auth = getAuth();\n    const { email, password } = event.target.elements;\n    console.log(email, password);\n    createUserWithEmailAndPassword(auth, email.value, password.value)\n      .then(({ user }) => {\n        dispatch(setUser({\n          email: user.email,\n          id: user.uid,\n          token: user.accessToken,\n        }));\n        history('/');\n      })\n      .catch((error) => {\n        setError(error.code.slice(5));\n      });\n  };\n\n  return (\n    isAuthenticated ? <Navigate to='/' /> :\n      <div className='registration-page'>\n        <div className='form'>\n          <div className='nav'>\n            <Link to='/login'>Логин</Link>\n            <Link to='/registration' className='active'>Регистрация</Link>\n          </div>\n          <form onSubmit={handleSubmit}>\n            <input type='email' name='email' placeholder='Имя' />\n            <input type='password' name='password' placeholder='Пароль' />\n            <button type='submit'>Зарегистрироваться</button>\n          </form>\n          <div className='error-message'>{error}</div>\n        </div>\n      </div>\n  );\n\n}\n\nexport default RegistrationnPage;\n","import RegistrationnPage from './RegistrationnPage';\n\nexport default RegistrationnPage;\n","import { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport './assets/scss/global.scss';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './firebase';\nimport DefaultLayout from './layouts/DefaultLayout';\nimport HomePage from './page/HomePage';\nimport RequireAuth from './HOC/RequireAuth';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nimport LoginPage from './page/LoginPage';\nimport AuthLayout from './layouts/AuthLayout';\nimport RegistrationnPage from './page/RegistrationnPage';\n\n\nconst persistor = persistStore(store);\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        < PersistGate loading={null} persistor={persistor}>\n          <Routes>\n            <Route path='/' element={<DefaultLayout />}>\n              <Route path='/' element={<RequireAuth><HomePage /></RequireAuth>} />;\n            </Route>\n            <Route path='/' element={<AuthLayout />}>\n              <Route path='/login' element={<LoginPage />} />;\n              <Route path='/registration' element={<RegistrationnPage />} />;\n            </Route>\n            <Route path='*' element={<LoginPage />} />;\n          </Routes>\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}