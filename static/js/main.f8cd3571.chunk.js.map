{"version":3,"sources":["store/slices/boardSlice.js","components/Board/AddColumn/AddColumn.jsx","components/Board/AddColumn/index.js","components/Board/Card/Card.jsx","components/Board/Card/index.js","components/Board/AddCard/AddCard.jsx","components/Board/Column/Column.jsx","components/Board/Board.jsx","page/HomePage/HomePage.jsx","page/HomePage/index.js","page/LoginPage/LoginPage.jsx","page/LoginPage/index.js","routes/index.js","routes/routes.js","store/store.js","layouts/DefaultLayout/DefaultLayout.jsx","layouts/DefaultLayout/index.js","App.jsx","index.jsx"],"names":["initialState","columns","id","uuid","title","cards","text","boardSlice","createSlice","name","reducers","editTitleColumn","state","action","payload","columnIndex","addColumn","push","addCard","console","log","card","editTextCard","cardIndex","deleteCard","splice","deleteColumn","actions","AddColumn","useState","isEdit","setIsEdit","columnTitle","setColumnTitle","dispatch","useDispatch","handleToggle","className","classNames","placeholder","hide","onClick","form","show","type","value","onChange","event","target","column","Card","setValue","useContext","BorderContext","useEffect","handleDelete","handleChangeEditText","AddCard","cardText","setCardText","Column","onBlur","handleChangeEditTitle","length","map","createContext","Board","useSelector","boardReducer","borderRef","useRef","Provider","ref","HomePage","LoginPage","routes","path","element","to","configureStore","reducer","middleware","thunk","DefaultLayout","children","App","store","route","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8cd3571.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = {\n  columns: [\n    {\n      id: `column-${uuid()}`, title: 'План на месяц', cards: [\n        { id: `card-${uuid()}`, text: 'Пройти курс по React' },\n        { id: `card-${uuid()}`, text: 'Отметить день рождения' },\n      ],\n    },\n    {\n      id: `column-${uuid()}`, title: 'План на день', cards: [\n        { id: `card-${uuid()}`, text: 'Записаться на курс по React' },\n        { id: `card-${uuid()}`, text: 'Забронировать тир на субботу' },\n      ],\n    },\n  ],\n};\n\nexport const boardSlice = createSlice({\n  name: 'board',\n  initialState,\n  reducers: {\n    editTitleColumn: (state, action) => {\n      state.columns[action.payload.columnIndex].title = action.payload.title;\n    },\n    addColumn: (state, action) => {\n      state.columns.push(action.payload);\n    },\n    addCard: (state, action) => {\n      console.log(action.payload);\n      state.columns[action.payload.columnIndex].cards.push(action.payload.card);\n    },\n    editTextCard: (state, action) => {\n      state.columns[action.payload.columnIndex].cards[action.payload.cardIndex].text = action.payload.text;\n    },\n    deleteCard: (state, action) => {\n      state.columns[action.payload.columnIndex].cards.splice(action.payload.cardIndex, 1);\n    },\n    deleteColumn: (state, action) => {\n      state.columns.splice(action.payload.columnIndex, 1);\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addColumn, addCard, editTitleColumn, editTextCard, deleteCard, deleteColumn,\n} = boardSlice.actions;\n\nexport default boardSlice.reducer;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './AddColumn.scoped.scss';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../../store/slices/boardSlice';\nimport { v4 as uuid } from 'uuid';\n\nfunction AddColumn() {\n  const [isEdit, setIsEdit] = useState(false);\n  const [columnTitle, setColumnTitle] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n    setColumnTitle('');\n  };\n\n  const handleChangeTitle = (event) => {\n    setColumnTitle(event.target.value);\n  };\n\n  const handleAddColumn = () => {\n    if (columnTitle !== '') {\n      const column = { id: `column-${uuid()}`, title: columnTitle, cards: [] };\n      dispatch(addColumn(column));\n      setIsEdit(!isEdit);\n    }\n  };\n\n  return (\n    <div className='add-column'>\n      <div className='add-button'>\n        <div\n          className={classNames({\n            placeholder: true,\n            hide: isEdit,\n          })}\n          onClick={handleToggle}\n        >\n          <i className='far fa-plus' />Добавьте колонку\n        </div>\n        <div\n          className={classNames({\n            form: true,\n            show: isEdit,\n          })}\n        >\n          <div className='input'>\n            <input type='text' value={columnTitle} onChange={handleChangeTitle} />\n          </div>\n          <div className='nav'>\n            <button type='button' onClick={handleAddColumn}>\n              Добавить карточку\n            </button>\n            <i className='fal fa-times' onClick={handleToggle} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddColumn;\n","import AddColumn from './AddColumn';\n\nexport default AddColumn;\n","import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport './Card.scoped.scss';\nimport { deleteCard, editTextCard } from '../../../store/slices/boardSlice';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { BorderContext } from '../Board';\n\n\nfunction Card({ card, columnIndex, cardIndex }) {\n  const [value, setValue] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const dispatch = useDispatch();\n  const borderRef = useContext(BorderContext);\n\n\n  useEffect(() => {\n    setValue(card.text);\n  }, [card.text]);\n\n  const handleChangeEditText = (event, columnIndex, cardIndex) => {\n    dispatch(editTextCard({ text: value, columnIndex: columnIndex, cardIndex: cardIndex }));\n  };\n  const handleDelete = (columnIndex, cardIndex) => {\n    dispatch(deleteCard({ columnIndex: columnIndex, cardIndex: cardIndex }));\n  };\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n  };\n\n  const handleEditTitleCard = (event) => {\n    const value = event.target.value;\n    setValue(value);\n  };\n\n\n  // -----------------------------\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", scrollHandler, true);\n  //   return () => {\n  //     window.removeEventListener(\"scroll\", scrollHandler, true);\n  //   };\n  // }, []);\n\n\n  // const [dragging, setDragging] = useState(false);\n  // const currentRef = useRef(null);\n  // const [originalCoord, setOriginalCoord] = useState({ shiftX: 0, shiftY: 0 });\n\n  // const handleParentMouseMove = ((event) => {\n  //   currentRef.current.style.left = event.pageX + 'px';\n  //   currentRef.current.style.top = event.pageY + 'px';\n  // });\n\n  // // const scrollHandler = (event) => {\n  // //   console.log(currentRef.current.getBoundingClientRect());\n  // //\n  // //   return {\n  // //     top: currentRef.current.getBoundingClientRect().top + event.window.pageYOffset,\n  // //     left: currentRef.current.getBoundingClientRect().left + pageXOffset,\n  // //   };\n  // //\n  // // };\n\n  // function getCoords(elem) { // кроме IE8-\n  //   var box = elem.getBoundingClientRect();\n  //   return {\n  //     top: box.top + pageYOffset,\n  //     left: box.left + pageXOffset\n  //   };\n  // }\n\n  \n  // const handleMouseDown = (event) => {\n  //   setDragging(true);\n  //   event.currentTarget.style.position = 'absolute';\n\n  //   setOriginalCoord({\n  //     shiftX: event.pageX,\n  //     shiftY: event.pageY,\n  //   });\n\n  //   borderRef.current.addEventListener('mousemove', handleParentMouseMove);\n  // };\n\n\n  // const handleMouseUp = (event) => {\n  //   setDragging(false);\n  //   // setOriginalCoord({ x: xPos, y: yPos });\n  //   // setDelta({ x: 0, y: 0 });\n  //   borderRef.current.removeEventListener('mousemove', handleParentMouseMove);\n  // };\n\n  return (\n    <div\n      id={`draggable-${card.id}`}\n      className='card draggable'\n      // onMouseDown={handleMouseDown}\n      // onMouseUp={handleMouseUp}\n      // ref={currentRef}\n    >\n      <div className={classNames({\n        title: true, hide: isEdit,\n      })}>\n        <span className='text'>{card.text}</span>\n        <span className='nav'>\n        <i className='far fa-pen' onClick={handleToggle} />\n        <i className='far fa-trash-alt' onClick={() => {\n          handleDelete(columnIndex, cardIndex);\n        }} />\n      </span>\n      </div>\n\n      <div\n        className={classNames({\n          form: true, show: isEdit,\n        })}\n      >\n        <div className='textarea'>\n        <textarea type='text' value={value} placeholder='Ввести заголовок для этой карточки'\n                  onChange={handleEditTitleCard} />\n        </div>\n        <div className='nav'>\n          <button type='button' onClick={(event) => {\n            handleChangeEditText(event, columnIndex, cardIndex);\n          }}>\n            Сохранить\n          </button>\n          <i className='fal fa-times' onClick={handleToggle} />\n        </div>\n      </div>\n    </div>);\n}\n\nexport default Card;\n","import Card from './Card';\n\nexport default Card;\n","import React, { useState } from 'react';\nimport './AddCard.scoped.scss';\nimport classNames from 'classnames';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../../store/slices/boardSlice';\n\nfunction AddCard({ columnIndex }) {\n  const dispatch = useDispatch();\n  const [cardText, setCardText] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n\n\n  const handleToggle = () => {\n    setIsEdit(!isEdit);\n    setCardText('');\n  };\n\n  const handleEditTitleCard = (event) => {\n    const value = event.target.value;\n    setCardText(value);\n  };\n\n  const handleAddCard = () => {\n    if (cardText !== '') {\n      const card = { id: `card-${uuid()}`, text: cardText };\n      dispatch(addCard({ card, columnIndex: columnIndex }));\n      setIsEdit(!isEdit);\n    }\n  };\n  return (\n    <div className='add-card'>\n      <div className='add-button'>\n        <div\n          className={classNames({\n            placeholder: true,\n            hide: isEdit,\n          })}\n          onClick={handleToggle}\n        >\n          <i className='far fa-plus' />Добавьте еще одну колонку\n        </div>\n        <div\n          className={classNames({\n            form: true,\n            show: isEdit,\n          })}\n        >\n          <div className='textarea'>\n            <textarea type='text' value={cardText} placeholder='Ввести заголовок для этой карточки'\n                      onChange={handleEditTitleCard} />\n          </div>\n          <div className='nav'>\n            <button type='button' onClick={handleAddCard}>\n              Добавить карточку\n            </button>\n            <i className='fal fa-times' onClick={handleToggle} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddCard;\n","import React, { useEffect, useState } from 'react';\nimport './Column.scoped.scss';\nimport { v4 as uuid } from 'uuid';\nimport Card from '../Card';\nimport AddCard from '../AddCard/AddCard';\nimport { deleteColumn, editTitleColumn } from '../../../store/slices/boardSlice';\nimport { useDispatch } from 'react-redux';\n\nfunction Column({ column, columnIndex }) {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n\n  useEffect(() => {\n    setValue(column.title);\n  }, [column.title]);\n\n  const handleChangeEditTitle = (event, columnIndex) => {\n    dispatch(editTitleColumn({ title: value, columnIndex: columnIndex }));\n  };\n\n\n  const handleDelete = (columnIndex) => {\n    dispatch(deleteColumn(columnIndex));\n  };\n\n\n  return (\n    <div id={column.id} className='column'>\n      <div className='column-header'>\n        <div className='input'>\n          <input\n            type='text'\n            value={value}\n            onChange={(event) => {\n              setValue(event.target.value);\n            }}\n            onBlur={(event) => {\n              handleChangeEditTitle(event, columnIndex);\n            }}\n          />\n        </div>\n        <div className='nav'>\n          <i className='far fa-trash-alt' onClick={() => {\n            handleDelete(columnIndex);\n          }} />\n        </div>\n      </div>\n\n      <div className='column-list'>\n        {column.cards.length > 0 &&\n          column.cards.map((card, cardIndex) => {\n            return <Card key={uuid()} card={card} columnIndex={columnIndex} cardIndex={cardIndex} />;\n          })\n        }\n      </div>\n      <div className='column-footer'>\n        <AddCard columnIndex={columnIndex} />\n      </div>\n    </div>\n  );\n}\n\nexport default Column;\n","import React, { createContext, useRef } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './Board.scoped.scss';\nimport AddColumn from '../../components/Board/AddColumn';\nimport Column from '../../components/Board/Column/Column';\nimport { useSelector } from 'react-redux';\n\nexport const BorderContext = createContext(null);\n\nfunction Board() {\n  const columns = useSelector((state) => {\n    return state.boardReducer.columns;\n  });\n\n  const borderRef = useRef();\n  return (\n    <BorderContext.Provider value={borderRef}>\n      <div className='board' ref={borderRef}>\n        {columns &&\n          columns.map((column, columnIndex) => {\n            return (\n              <Column key={uuid()} column={column} columnIndex={columnIndex} />\n            );\n          })}\n        <AddColumn />\n      </div>\n    </BorderContext.Provider>\n\n  );\n}\n\nexport default Board;\n","import React from 'react';\nimport './HomePage.scoped.scss';\nimport Board from '../../components/Board/Board';\n\nfunction HomePage() {\n  return (\n    <div className='home-page'>\n      <Board />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from 'react';\n\nfunction LoginPage() {\n  return <div>asd</div>;\n}\n\nexport default LoginPage;\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import routes from './routes';\n\nexport default routes;\n","import { Navigate } from 'react-router-dom';\nimport React from 'react';\nimport HomePage from '../page/HomePage';\nimport LoginPage from '../page/LoginPage';\n\nconst routes = [\n  {\n    path: '/',\n    element: <HomePage />\n  },\n  {\n    path: '/login',\n    element: <LoginPage />\n  },\n  {\n    path: '*',\n    element: <Navigate to=\"/login\" />\n  }\n];\n\nexport default routes;\n","import { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport boardReducer from './slices/boardSlice';\n\n\nexport default configureStore({\n  reducer: {\n    boardReducer: boardReducer,\n  },\n  middleware: [thunk],\n\n});\n","import './DefaultLayout.scss';\n\nfunction DefaultLayout({ children }) {\n  return (\n    <div className='board-layout'>\n      <main className='main'>{children}</main>\n    </div>\n  );\n}\n\nexport default DefaultLayout;\n","import DefaultLayout from './DefaultLayout';\n\nexport default DefaultLayout;\n","import { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport routes from './routes';\nimport './assets/scss/global.scss';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport DefaultLayout from './layouts/DefaultLayout';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <DefaultLayout>\n          <Routes>\n            {routes &&\n              routes.map((route) => {\n                return <Route key={route.path} path={route.path} element={route.element} />;\n              })}\n          </Routes>\n        </DefaultLayout>\n      </BrowserRouter>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}